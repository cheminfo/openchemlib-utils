{"version":3,"file":"openchemlib-utils.js","sources":["../src/OCL.js","../src/util/tagAtom.js","../src/diastereotopic/addDiastereotopicMissingChirality.js","../src/util/makeRacemic.js","../src/diastereotopic/getDiastereotopicAtomIDs.js","../src/diastereotopic/getDiastereotopicAtomIDsAndH.js","../src/diastereotopic/toDiastereotopicSVG.js","../src/diastereotopic/Dia.js","../src/util/isCsp3.js","../src/hose/getHoseCodesForAtom.js","../src/hose/getHoseCodesFromDiastereotopicID.js","../src/hose/getHoseCodesAndDiastereotopicIDs.js","../src/hose/Hose.js","../src/util/getAtomsInfo.js","../../../mljs/floyd-warshall/node_modules/is-any-array/src/index.js","../../../mljs/floyd-warshall/node_modules/ml-array-max/lib-es6/index.js","../../../mljs/floyd-warshall/node_modules/ml-array-min/lib-es6/index.js","../../../mljs/floyd-warshall/node_modules/ml-array-rescale/lib-es6/index.js","../../../mljs/floyd-warshall/node_modules/ml-matrix/src/util.js","../../../mljs/floyd-warshall/node_modules/ml-matrix/src/stat.js","../../../mljs/floyd-warshall/node_modules/ml-matrix/src/inspect.js","../../../mljs/floyd-warshall/node_modules/ml-matrix/src/mathOperations.js","../../../mljs/floyd-warshall/node_modules/ml-matrix/src/matrix.js","../../../mljs/floyd-warshall/src/index.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/matrix.js","../src/util/getConnectivityMatrix.js","../src/util/Util.js","../src/hose/getHoseCodesForPath.js","../src/path/getPathsInfo.js","../src/path/Path.js"],"sourcesContent":["let OCL;\n\nexport function getOCL() {\n  if (!OCL) {\n    throw new Error('OCL has to be initialized using initOCL(OCL)');\n  }\n  return OCL;\n}\n\nexport function initOCL(newOCL) {\n  OCL = newOCL;\n}\n","import { getOCL } from '../OCL';\n\nlet xAtomicNumber = 0;\n\n/**\n * Tag an atom to be able to visualize it\n * @param {OCL.Molecule} molecule\n * @param {number} iAtom\n * @memberof Util\n */\nexport function tagAtom(molecule, iAtom) {\n  molecule.setAtomCustomLabel(iAtom, `${molecule.getAtomLabel(iAtom)}*`);\n  if (molecule.getAtomicNo(iAtom) === 1) {\n    molecule.setAtomicNo(iAtom, getXAtomicNumber());\n  } else {\n    // we can not use X because we would have problems with valencies if it is\n    // expanded hydrogens or not\n    // we can not only use a custom label because it does not count for the canonisation\n    molecule.setAtomMass(iAtom, molecule.getAtomMass(iAtom) + 5);\n  }\n}\n\nfunction getXAtomicNumber() {\n  if (!xAtomicNumber) {\n    const OCL = getOCL();\n    xAtomicNumber = OCL.Molecule.getAtomicNoFromLabel('X');\n  }\n  return xAtomicNumber;\n}\n","import { tagAtom } from '../util/tagAtom';\nimport { getOCL } from '../OCL';\n\n/**\n * Add either missing chirality of diastereotopic missing chirality\n * The problem is that sometimes we need to add chiral bond that was not planned because it is the same group\n * This is the case for example for the valine where the 2 C of the methyl groups are diastereotopic\n * @param {OCL.Molecule} molecule\n * @param {object} [options={}]\n * @param {number} [options.esrType=cESRTypeAnd]\n * @memberof Dia\n */\nexport function addDiastereotopicMissingChirality(molecule, options = {}) {\n  const { Molecule } = getOCL();\n  const { esrType = Molecule.cESRTypeAnd } = options;\n\n  for (let iAtom = 0; iAtom < molecule.getAllAtoms(); iAtom++) {\n    let tempMolecule = molecule.getCompactCopy();\n    tagAtom(tempMolecule, iAtom);\n    // After copy, helpers must be recalculated\n    tempMolecule.ensureHelperArrays(Molecule.cHelperBitsStereo);\n    // We need to have >0 and not >1 because there could be unspecified chirality in racemate\n\n    for (let i = 0; i < tempMolecule.getAtoms(); i++) {\n      // changed from from handling below; TLS 9.Nov.2015\n      if (\n        tempMolecule.isAtomStereoCenter(i) &&\n        tempMolecule.getStereoBond(i) === -1\n      ) {\n        let stereoBond = tempMolecule.getAtomPreferredStereoBond(i);\n        if (stereoBond !== -1) {\n          molecule.setBondType(stereoBond, Molecule.cBondTypeUp);\n          if (molecule.getBondAtom(1, stereoBond) === i) {\n            let connAtom = molecule.getBondAtom(0, stereoBond);\n            molecule.setBondAtom(0, stereoBond, i);\n            molecule.setBondAtom(1, stereoBond, connAtom);\n          }\n          // To me it seems that we have to add all stereo centers into AND group 0. TLS 9.Nov.2015\n          molecule.setAtomESR(i, esrType, 0);\n        }\n      }\n    }\n  }\n}\n","import { getOCL } from '../OCL';\n\n/**\n *\n * @param {OCL.Molecule} [molecule] An instance of a molecule\n * @param {object} [options={}]\n * @param {object} [options.OCL] openchemlib library\n * @memberof Util\n */\nexport function makeRacemic(molecule) {\n  const { Molecule } = getOCL();\n\n  // if we don't calculate this we have 2 epimers\n  molecule.ensureHelperArrays(Molecule.cHelperCIP);\n\n  // we need to make one group \"AND\" for chiral (to force to racemic, this means diastereotopic and not enantiotopic)\n  for (let i = 0; i < molecule.getAllAtoms(); i++) {\n    if (molecule.getAtomParity(i) !== Molecule.cAtomParityNone) {\n      molecule.setAtomESR(i, Molecule.cESRTypeAnd, 0); // changed to group 0; TLS 9.Nov.2015\n    }\n  }\n}\n","import { tagAtom } from '../util/tagAtom';\nimport { makeRacemic } from '../util/makeRacemic';\nimport { getOCL } from '../OCL';\n\nimport { addDiastereotopicMissingChirality } from './addDiastereotopicMissingChirality';\n\n/**\n * Returns an array of diastereotopic ID (as oclCode)\n * @param {OCL.Molecule} molecule\n * @memberof Dia\n */\nexport function getDiastereotopicAtomIDs(molecule) {\n  const OCL = getOCL();\n  addDiastereotopicMissingChirality(molecule);\n\n  let numberAtoms = molecule.getAllAtoms();\n  let ids = [];\n  for (let iAtom = 0; iAtom < numberAtoms; iAtom++) {\n    let tempMolecule = molecule.getCompactCopy();\n    tagAtom(tempMolecule, iAtom);\n    makeRacemic(tempMolecule);\n    // We need to ensure the helper array in order to get correctly the result of racemisation\n    ids[iAtom] = tempMolecule.getCanonizedIDCode(\n      OCL.Molecule.CANONIZER_ENCODE_ATOM_CUSTOM_LABELS,\n    );\n  }\n  return ids;\n}\n","import { getOCL } from '../OCL';\n\nimport { getDiastereotopicAtomIDs } from './getDiastereotopicAtomIDs';\n// Previously getExtendedDiastereotopicAtomIDs\n\n/**\n *\n * @param {OCL.Molecule} molecule\n * @memberof Dia\n */\nexport function getDiastereotopicAtomIDsAndH(originalMolecule) {\n  const OCL = getOCL();\n  const molecule = originalMolecule.getCompactCopy();\n  molecule.addImplicitHydrogens();\n  // TODO Temporary code ???\n  molecule.ensureHelperArrays(OCL.Molecule.cHelperNeighbours);\n\n  const diaIDs = getDiastereotopicAtomIDs(molecule);\n  const newDiaIDs = [];\n\n  for (let i = 0; i < diaIDs.length; i++) {\n    const diaID = diaIDs[i];\n    const newDiaID = {\n      oclID: diaID,\n      hydrogenOCLIDs: [],\n      nbHydrogens: 0,\n    };\n    for (let j = 0; j < molecule.getAllConnAtoms(i); j++) {\n      const atom = molecule.getConnAtom(i, j);\n      if (molecule.getAtomicNo(atom) === 1) {\n        newDiaID.nbHydrogens++;\n        if (newDiaID.hydrogenOCLIDs.indexOf(diaIDs[atom]) === -1) {\n          newDiaID.hydrogenOCLIDs.push(diaIDs[atom]);\n        }\n      }\n    }\n\n    newDiaIDs.push(newDiaID);\n  }\n\n  return newDiaIDs;\n}\n","import { getDiastereotopicAtomIDsAndH } from './getDiastereotopicAtomIDsAndH';\n\n/**\n * Returns a SVG\n * @param {*} molecule\n * @param {*} [options={}]\n * @memberof Dia\n */\nexport function toDiastereotopicSVG(molecule, options = {}) {\n  let {\n    width = 300,\n    height = 200,\n    prefix = 'ocl',\n    heavyAtomHydrogen = false,\n  } = options;\n  let svg = options.svg;\n  let diaIDs = [];\n\n  let hydrogenInfo = {};\n  getDiastereotopicAtomIDsAndH(molecule).forEach(function(line) {\n    hydrogenInfo[line.oclID] = line;\n  });\n\n  if (heavyAtomHydrogen) {\n    for (let i = 0; i < molecule.getAtoms(); i++) {\n      diaIDs.push([]);\n    }\n    let groupedDiaIDs = molecule.getGroupedDiastereotopicAtomIDs();\n    groupedDiaIDs.forEach(function(diaID) {\n      if (\n        hydrogenInfo[diaID.oclID] &&\n        hydrogenInfo[diaID.oclID].nbHydrogens > 0\n      ) {\n        diaID.atoms.forEach((atom) => {\n          hydrogenInfo[diaID.oclID].hydrogenOCLIDs.forEach((id) => {\n            if (!diaIDs[atom * 1].includes(id)) diaIDs[atom].push(id);\n          });\n        });\n      }\n    });\n  } else {\n    diaIDs = molecule.getDiastereotopicAtomIDs().map((a) => [a]);\n  }\n\n  if (!svg) svg = molecule.toSVG(width, height, prefix);\n\n  svg = svg.replace(/Atom:[0-9]+\"/g, function(value) {\n    let atom = value.replace(/[^0-9]/g, '');\n    return `${value} data-diaid=\"${diaIDs[atom].join(',')}\"`;\n  });\n\n  return svg;\n}\n","import { addDiastereotopicMissingChirality } from './addDiastereotopicMissingChirality';\nimport { getDiastereotopicAtomIDs } from './getDiastereotopicAtomIDs';\nimport { getDiastereotopicAtomIDsAndH } from './getDiastereotopicAtomIDsAndH';\nimport { toDiastereotopicSVG } from './toDiastereotopicSVG';\n\nexport const Dia = {\n  addDiastereotopicMissingChirality,\n  getDiastereotopicAtomIDs,\n  getDiastereotopicAtomIDsAndH,\n  toDiastereotopicSVG,\n};\n","/**\n * Check if a specific atom is a sp3 carbon\n * @param {OCL.Molecule} molecule\n * @param {number} atomID\n * @memberof Util\n */\n\nexport function isCsp3(molecule, atomID) {\n  if (molecule.getAtomicNo(atomID) !== 6) return false;\n  if (molecule.getAtomCharge(atomID) !== 0) return false;\n  if (\n    molecule.getImplicitHydrogens(atomID) + molecule.getConnAtoms(atomID) !==\n    4\n  ) {\n    return false;\n  }\n  return true;\n}\n","import { getOCL } from '../OCL';\nimport { tagAtom } from '../util/tagAtom';\nimport { isCsp3 } from '../util/isCsp3';\n\nexport const FULL_HOSE_CODE = 1;\nexport const HOSE_CODE_CUT_C_SP3_SP3 = 2;\n\n/**\n * Returns the hose code for a specific atom number\n * @param {OCL.Molecule} originalMolecule\n * @param {number} rootAtom\n * @param {object} [options={}]\n * @param {boolean} [options.isTagged] Specify is the atom is already tagged\n * @memberof Hose\n */\nexport function getHoseCodesForAtom(originalMolecule, rootAtom, options = {}) {\n  const OCL = getOCL();\n  const {\n    minSphereSize = 0,\n    maxSphereSize = 4,\n    kind = FULL_HOSE_CODE,\n    isTagged = false,\n  } = options;\n\n  const molecule = originalMolecule.getCompactCopy();\n\n  if (!isTagged) tagAtom(molecule, rootAtom);\n\n  molecule.setFragment(true);\n\n  let fragment = new OCL.Molecule(0, 0);\n  let results = [];\n  let min = 0;\n  let max = 0;\n  let atomMask = new Array(molecule.getAllAtoms());\n  let atomList = new Array(molecule.getAllAtoms());\n\n  for (let sphere = 0; sphere <= maxSphereSize; sphere++) {\n    if (max === 0) {\n      atomList[0] = rootAtom;\n      atomMask[rootAtom] = true;\n      max = 1;\n    } else {\n      let newMax = max;\n      for (let i = min; i < max; i++) {\n        let atom = atomList[i];\n        for (let j = 0; j < molecule.getConnAtoms(atom); j++) {\n          let connAtom = molecule.getConnAtom(atom, j);\n          if (!atomMask[connAtom]) {\n            switch (kind) {\n              case FULL_HOSE_CODE:\n                atomMask[connAtom] = true;\n                atomList[newMax++] = connAtom;\n                break;\n              case HOSE_CODE_CUT_C_SP3_SP3:\n                if (!(isCsp3(molecule, atom) && isCsp3(molecule, connAtom))) {\n                  atomMask[connAtom] = true;\n                  atomList[newMax++] = connAtom;\n                }\n                break;\n              default:\n                throw new Error('getHoseCoesForAtom unknown kind');\n            }\n          }\n        }\n      }\n      min = max;\n      max = newMax;\n    }\n    molecule.copyMoleculeByAtoms(fragment, atomMask, true, null);\n    if (sphere >= minSphereSize) {\n      results.push(\n        fragment.getCanonizedIDCode(\n          OCL.Molecule.CANONIZER_ENCODE_ATOM_CUSTOM_LABELS,\n        ),\n      );\n    }\n  }\n  return results;\n}\n","import { getOCL } from '../OCL';\n\nimport { getHoseCodesForAtom } from './getHoseCodesForAtom';\n/**\n * Returns the hose code for a specific marked atom\n * @param {string} diastereotopicID\n * @param {object} options\n * @memberof Hose\n */\n\nexport function getHoseCodesFromDiastereotopicID(\n  diastereotopicID,\n  options = {},\n) {\n  const OCL = getOCL();\n  const molecule = OCL.Molecule.fromIDCode(diastereotopicID);\n  // One of the atom has to be marked !\n  let atomID = -1;\n  for (let i = 0; i < molecule.getAllAtoms(); i++) {\n    // we need to find the marked atom\n    const atomCustomLabel = molecule.getAtomCustomLabel(i);\n    if (atomCustomLabel != null && atomCustomLabel.endsWith('*')) {\n      atomID = i;\n      break;\n    }\n  }\n  if (atomID >= 0) {\n    options.isTagged = true;\n    return getHoseCodesForAtom(molecule, atomID, options);\n  }\n  return undefined;\n}\n","import { getDiastereotopicAtomIDs } from '../diastereotopic/getDiastereotopicAtomIDs';\n\nimport { getHoseCodesFromDiastereotopicID } from './getHoseCodesFromDiastereotopicID';\n/**\n * Returns an array containing one entry per atom containing\n * diaID and hose code\n * @param {OCL.Molecule} molecule\n * @param {object} options\n * @memberof Hose\n */\n\nexport function getHoseCodesAndDiastereotopicIDs(molecule, options) {\n  const diaIDs = getDiastereotopicAtomIDs(molecule).map((oclID) => ({\n    oclID,\n  }));\n  // seems like a very slow approach\n  diaIDs.forEach(function(diaID) {\n    const hoses = getHoseCodesFromDiastereotopicID(diaID.oclID, options);\n    diaID.hoses = [];\n    let sphere = 0;\n    for (const hose of hoses) {\n      diaID.hoses.push({\n        sphere: sphere++,\n        oclID: hose,\n      });\n    }\n  });\n  return diaIDs;\n}\n","import { getHoseCodesAndDiastereotopicIDs } from './getHoseCodesAndDiastereotopicIDs';\nimport { getHoseCodesForAtom } from './getHoseCodesForAtom';\nimport { getHoseCodesFromDiastereotopicID } from './getHoseCodesFromDiastereotopicID';\n\nexport const Hose = {\n  getHoseCodesAndDiastereotopicIDs,\n  getHoseCodesForAtom,\n  getHoseCodesFromDiastereotopicID,\n};\n","import { getOCL } from '../OCL';\nimport { getDiastereotopicAtomIDs } from '../diastereotopic/getDiastereotopicAtomIDs';\n\n/**\n * Returns various information about atoms in the molecule\n * @param {OCL.Molecule} [molecule]\n * @memberof Util\n */\nexport function getAtomsInfo(molecule) {\n  const OCL = getOCL();\n  molecule.ensureHelperArrays(OCL.Molecule.cHelperRings);\n\n  let diaIDs = getDiastereotopicAtomIDs(molecule);\n\n  let results = [];\n  for (let i = 0; i < diaIDs.length; i++) {\n    let result = {\n      oclID: diaIDs[i],\n      extra: {\n        singleBonds: 0,\n        doubleBonds: 0,\n        tripleBonds: 0,\n        aromaticBonds: 0,\n        cnoHybridation: 0, // should be 1 (sp), 2 (sp2) or 3 (sp3)\n      },\n    };\n    let extra = result.extra;\n    results.push(result);\n    result.abnormalValence = molecule.getAtomAbnormalValence(i); // -1 is normal otherwise specified\n    result.charge = molecule.getAtomCharge(i);\n    result.cipParity = molecule.getAtomCIPParity(i);\n    result.color = molecule.getAtomColor(i);\n    result.customLabel = molecule.getAtomCustomLabel(i);\n    //        result.esrGroup=molecule.getAtomESRGroup(i);\n    //        result.esrType=molecule.getAtomESRType(i);\n    result.atomicNo = molecule.getAtomicNo(i);\n    result.label = molecule.getAtomLabel(i);\n    //        result.list=molecule.getAtomList(i);\n    //        result.listString=molecule.getAtomListString(i);\n    //        result.mapNo=molecule.getAtomMapNo(i);\n    result.mass = molecule.getAtomMass(i);\n    //        result.parity=molecule.getAtomParity(i);\n    //        result.pi=molecule.getAtomPi(i);\n    //        result.preferredStereoBond=molecule.getAtomPreferredStereoBond(i);\n    //        result.queryFeatures=molecule.getAtomQueryFeatures(i);\n    result.radical = molecule.getAtomRadical(i);\n    result.ringBondCount = molecule.getAtomRingBondCount(i);\n    //        result.ringCount=molecule.getAtomRingCount(i);\n    result.ringSize = molecule.getAtomRingSize(i);\n    result.x = molecule.getAtomX(i);\n    result.y = molecule.getAtomY(i);\n    result.z = molecule.getAtomZ(i);\n    result.allHydrogens = molecule.getAllHydrogens(i);\n    result.connAtoms = molecule.getConnAtoms(i);\n    result.allConnAtoms = molecule.getAllConnAtoms(i);\n\n    result.implicitHydrogens =\n      result.allHydrogens + result.connAtoms - result.allConnAtoms;\n\n    result.isAromatic = molecule.isAromaticAtom(i);\n    result.isAllylic = molecule.isAllylicAtom(i);\n    result.isStereoCenter = molecule.isAtomStereoCenter(i);\n    result.isRing = molecule.isRingAtom(i);\n    result.isSmallRing = molecule.isSmallRingAtom(i);\n    result.isStabilized = molecule.isStabilizedAtom(i);\n\n    // todo HACK to circumvent bug in OCL that consider than an hydrogen is connected to itself\n    result.extra.singleBonds =\n      result.atomicNo === 1 ? 0 : result.implicitHydrogens;\n    for (let j = 0; j < molecule.getAllConnAtoms(i); j++) {\n      let bond = molecule.getConnBond(i, j);\n      let bondOrder = molecule.getBondOrder(bond);\n      if (molecule.isAromaticBond(bond)) {\n        extra.aromaticBonds++;\n      } else if (bondOrder === 1) {\n        // not an hydrogen\n        extra.singleBonds++;\n      } else if (bondOrder === 2) {\n        extra.doubleBonds++;\n      } else if (bondOrder === 3) {\n        extra.tripleBonds++;\n      }\n    }\n    result.extra.totalBonds =\n      result.extra.singleBonds +\n      result.extra.doubleBonds +\n      result.extra.tripleBonds +\n      result.extra.aromaticBonds;\n\n    if (result.atomicNo === 6) {\n      result.extra.cnoHybridation = result.extra.totalBonds - 1;\n    } else if (result.atomicNo === 7) {\n      result.extra.cnoHybridation = result.extra.totalBonds;\n    } else if (result.atomicNo === 8) {\n      result.extra.cnoHybridation = result.extra.totalBonds + 1;\n    } else if (result.atomicNo === 1) {\n      let connectedAtom =\n        molecule.getAllConnAtoms(i) === 0\n          ? 0\n          : molecule.getAtomicNo(molecule.getConnAtom(i, 0));\n      result.extra.hydrogenOnAtomicNo = connectedAtom;\n      if (connectedAtom === 7 || connectedAtom === 8) {\n        result.extra.labileHydrogen = true;\n      }\n    }\n  }\n  return results;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { Matrix } from 'ml-matrix';\n\n/**\n * Algorithm that finds the shortest distance from one node to the other\n * @param {Matrix} adjMatrix - A squared adjacency matrix\n * @return {Matrix} - Distance from a node to the other, -1 if the node is unreachable\n */\nexport default function floydWarshall(adjMatrix) {\n  if (Matrix.isMatrix(adjMatrix) && adjMatrix.columns !== adjMatrix.rows) {\n    throw new TypeError('The adjacency matrix should be squared');\n  }\n  const numVertices = adjMatrix.columns;\n  let distMatrix = new Matrix(numVertices, numVertices);\n  distMatrix.apply((row, column) => {\n    // principal diagonal is 0\n    if (row === column) {\n      distMatrix.set(row, column, 0);\n    } else {\n      let val = adjMatrix.get(row, column);\n\n      if (val) {\n        // edges values remain the same\n        distMatrix.set(row, column, val);\n      } else {\n        // 0 values become infinity\n        distMatrix.set(row, column, Number.POSITIVE_INFINITY);\n      }\n    }\n  });\n\n  for (let k = 0; k < numVertices; ++k) {\n    for (let i = 0; i < numVertices; ++i) {\n      for (let j = 0; j < numVertices; ++j) {\n        let dist = distMatrix.get(i, k) + distMatrix.get(k, j);\n        if (distMatrix.get(i, j) > dist) {\n          distMatrix.set(i, j, dist);\n        }\n      }\n    }\n  }\n\n  // When there's no connection the value is -1\n  distMatrix.apply((row, column) => {\n    if (distMatrix.get(row, column) === Number.POSITIVE_INFINITY) {\n      distMatrix.set(row, column, -1);\n    }\n  });\n  return distMatrix;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import floydWarshall from 'ml-floyd-warshall';\nimport { Matrix } from 'ml-matrix';\n\nimport { getOCL } from '../OCL';\n\n/**\n * Returns a connectivity matrix\n * @param {OCL.Molecule} molecule\n * @param {object} [options={}]\n * @param {boolean} [options.pathLength=false] get the path length between atoms\n * @param {boolean} [options.mass=false] set the nominal mass of the atoms on diagonal\n * @param {boolean} [options.atomicNo=false] set the atomic number of the atom on diagonal\n * @param {boolean} [options.sdt=false] set 1, 2 or 3 depending if single, double or triple bond\n * @memberof Util\n */\nexport function getConnectivityMatrix(molecule, options = {}) {\n  const OCL = getOCL();\n  molecule.ensureHelperArrays(OCL.Molecule.cHelperNeighbours);\n  let nbAtoms = molecule.getAllAtoms();\n\n  let result = new Array(nbAtoms).fill();\n  result = result.map(() => new Array(nbAtoms).fill(0));\n\n  if (!options.pathLength) {\n    if (options.atomicNo) {\n      for (let i = 0; i < nbAtoms; i++) {\n        result[i][i] = molecule.getAtomicNo(i);\n      }\n    } else if (options.mass) {\n      for (let i = 0; i < nbAtoms; i++) {\n        result[i][i] = OCL.Molecule.cRoundedMass[molecule.getAtomicNo(i)];\n      }\n    } else {\n      for (let i = 0; i < nbAtoms; i++) {\n        result[i][i] = 1;\n      }\n    }\n  }\n\n  if (options.sdt) {\n    for (let i = 0; i < nbAtoms; i++) {\n      let l = molecule.getAllConnAtoms(i);\n      for (let j = 0; j < l; j++) {\n        result[i][molecule.getConnAtom(i, j)] = molecule.getConnBondOrder(i, j);\n      }\n    }\n  } else {\n    for (let i = 0; i < nbAtoms; i++) {\n      let l = molecule.getAllConnAtoms(i);\n      for (let j = 0; j < l; j++) {\n        result[i][molecule.getConnAtom(i, j)] = 1;\n      }\n    }\n  }\n\n  if (options.pathLength) {\n    result = floydWarshall(new Matrix(result)).to2DArray();\n  }\n  return result;\n}\n","import { getAtomsInfo } from './getAtomsInfo';\nimport { getConnectivityMatrix } from './getConnectivityMatrix';\nimport { makeRacemic } from './makeRacemic';\nimport { tagAtom } from './tagAtom';\nimport { isCsp3 } from './isCsp3';\n\nexport const Util = {\n  getAtomsInfo,\n  getConnectivityMatrix,\n  makeRacemic,\n  tagAtom,\n  isCsp3,\n};\n","import { tagAtom } from '../util/tagAtom';\nimport { getOCL } from '../OCL';\n\nlet fragment;\n\n/**\n * Returns the hose code for a specific atom number\n * @param {OCL.Molecule} molecule\n * @memberof Hose\n */\nexport function getHoseCodesForPath(molecule, from, to, maxLength) {\n  const OCL = getOCL();\n  molecule = molecule.getCompactCopy();\n\n  if (!fragment) fragment = new OCL.Molecule(0, 0);\n\n  tagAtom(molecule, from);\n  tagAtom(molecule, to);\n\n  let atoms = [];\n  molecule.getPath(atoms, from, to, maxLength + 1);\n  let torsion;\n  if (atoms.length === 4) {\n    torsion = molecule.calculateTorsion(atoms);\n  }\n\n  let min = 0;\n  let max = 0;\n  let atomMask = new Array(molecule.getAllAtoms()).fill(false);\n  let atomList = new Array(molecule.getAllAtoms()).fill(-1);\n  let hoses = [];\n\n  for (let sphere = 0; sphere <= 2; sphere++) {\n    if (max === 0) {\n      for (let atom of atoms) {\n        atomMask[atom] = true;\n        atomList[max++] = atom;\n      }\n    } else {\n      let newMax = max;\n      for (let i = min; i < max; i++) {\n        let atom = atomList[i];\n        for (let j = 0; j < molecule.getConnAtoms(atom); j++) {\n          let connAtom = molecule.getConnAtom(atom, j);\n          if (!atomMask[connAtom]) {\n            atomMask[connAtom] = true;\n            atomList[newMax++] = connAtom;\n          }\n        }\n      }\n      min = max;\n      max = newMax;\n    }\n    molecule.copyMoleculeByAtoms(fragment, atomMask, true, null);\n    hoses.push({\n      sphere,\n      oclID: fragment.getCanonizedIDCode(\n        OCL.Molecule.CANONIZER_ENCODE_ATOM_CUSTOM_LABELS,\n      ),\n    });\n  }\n\n  return {\n    atoms,\n    from,\n    to,\n    torsion,\n    hoses,\n    length: atoms.length - 1,\n  };\n}\n","import { getConnectivityMatrix } from '../util/getConnectivityMatrix';\nimport { getAtomsInfo } from '../util/getAtomsInfo';\nimport { getOCL } from '../OCL';\nimport { getHoseCodesForPath } from '../hose/getHoseCodesForPath';\n\nlet fragment;\n\n/**\n *\n * @param {OCL.Molecule} molecule\n * @param {object} [options={}]\n * @param {string} [opions.fromLabel='H']\n * @param {string} [opions.toLabel='H']\n * @param {string} [opions.minLenght=1]\n * @param {string} [opions.maxLength=4]\n * @memberof Path\n */\nexport function getPathsInfo(molecule, options = {}) {\n  const {\n    fromLabel = 'H',\n    toLabel = 'H',\n    minLength = 1,\n    maxLength = 4,\n  } = options;\n\n  const OCL = getOCL();\n\n  if (!fragment) {\n    fragment = new OCL.Molecule(0, 0);\n  }\n\n  let fromAtomicNumber = OCL.Molecule.getAtomicNoFromLabel(fromLabel);\n  let toAtomicNumber = OCL.Molecule.getAtomicNoFromLabel(toLabel);\n\n  // we need to find all the atoms 'fromLabel' and 'toLabel'\n  let atomsInfo = getAtomsInfo(molecule);\n\n  let pathLengthMatrix = getConnectivityMatrix(molecule, {\n    pathLength: true,\n  });\n\n  for (let from = 0; from < molecule.getAllAtoms(); from++) {\n    atomsInfo[from].couplings = [];\n    for (let to = 0; to < molecule.getAllAtoms(); to++) {\n      if (from !== to) {\n        if (molecule.getAtomicNo(from) === fromAtomicNumber) {\n          if (molecule.getAtomicNo(to) === toAtomicNumber) {\n            let pathLength = pathLengthMatrix[from][to];\n            if (pathLength >= minLength && pathLength <= maxLength) {\n              atomsInfo[from].couplings.push(\n                getHoseCodesForPath(\n                  molecule,\n                  from,\n                  to,\n                  pathLength,\n                  atomsInfo[to].oclID,\n                ),\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return atomsInfo;\n}\n","import { getPathsInfo } from './getPathsInfo';\n\nexport const Path = {\n  getPathsInfo,\n};\n"],"names":["OCL","getOCL","Error","initOCL","newOCL","xAtomicNumber","tagAtom","molecule","iAtom","setAtomCustomLabel","getAtomLabel","getAtomicNo","setAtomicNo","getXAtomicNumber","setAtomMass","getAtomMass","Molecule","getAtomicNoFromLabel","addDiastereotopicMissingChirality","options","esrType","cESRTypeAnd","getAllAtoms","tempMolecule","getCompactCopy","ensureHelperArrays","cHelperBitsStereo","i","getAtoms","isAtomStereoCenter","getStereoBond","stereoBond","getAtomPreferredStereoBond","setBondType","cBondTypeUp","getBondAtom","connAtom","setBondAtom","setAtomESR","makeRacemic","cHelperCIP","getAtomParity","cAtomParityNone","getDiastereotopicAtomIDs","numberAtoms","ids","getCanonizedIDCode","CANONIZER_ENCODE_ATOM_CUSTOM_LABELS","getDiastereotopicAtomIDsAndH","originalMolecule","addImplicitHydrogens","cHelperNeighbours","diaIDs","newDiaIDs","length","diaID","newDiaID","oclID","hydrogenOCLIDs","nbHydrogens","j","getAllConnAtoms","atom","getConnAtom","indexOf","push","toDiastereotopicSVG","width","height","prefix","heavyAtomHydrogen","svg","hydrogenInfo","forEach","line","groupedDiaIDs","getGroupedDiastereotopicAtomIDs","atoms","id","includes","map","a","toSVG","replace","value","join","Dia","isCsp3","atomID","getAtomCharge","getImplicitHydrogens","getConnAtoms","FULL_HOSE_CODE","HOSE_CODE_CUT_C_SP3_SP3","getHoseCodesForAtom","rootAtom","minSphereSize","maxSphereSize","kind","isTagged","setFragment","fragment","results","min","max","atomMask","Array","atomList","sphere","newMax","copyMoleculeByAtoms","getHoseCodesFromDiastereotopicID","diastereotopicID","fromIDCode","atomCustomLabel","getAtomCustomLabel","endsWith","undefined","getHoseCodesAndDiastereotopicIDs","hoses","hose","Hose","getAtomsInfo","cHelperRings","result","extra","singleBonds","doubleBonds","tripleBonds","aromaticBonds","cnoHybridation","abnormalValence","getAtomAbnormalValence","charge","cipParity","getAtomCIPParity","color","getAtomColor","customLabel","atomicNo","label","mass","radical","getAtomRadical","ringBondCount","getAtomRingBondCount","ringSize","getAtomRingSize","x","getAtomX","y","getAtomY","z","getAtomZ","allHydrogens","getAllHydrogens","connAtoms","allConnAtoms","implicitHydrogens","isAromatic","isAromaticAtom","isAllylic","isAllylicAtom","isStereoCenter","isRing","isRingAtom","isSmallRing","isSmallRingAtom","isStabilized","isStabilizedAtom","bond","getConnBond","bondOrder","getBondOrder","isAromaticBond","totalBonds","connectedAtom","hydrogenOnAtomicNo","labileHydrogen","toString","Object","prototype","isAnyArray","object","call","input","isArray","TypeError","maxValue","minValue","rescale","arguments","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","checkRowIndex","matrix","index","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","from","columnOut","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","name","sumByRow","sum","get","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","Math","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","repeat","indentData","constructor","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","formatNumber","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","e","substring","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","Number","isInteger","interval","eye","diag","data","l","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","console","warn","embed","mat","resultat","blockMult","b","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","floydWarshall","adjMatrix","numVertices","distMatrix","val","POSITIVE_INFINITY","dist","getConnectivityMatrix","nbAtoms","pathLength","cRoundedMass","sdt","getConnBondOrder","Util","getHoseCodesForPath","to","maxLength","getPath","torsion","calculateTorsion","getPathsInfo","fromLabel","toLabel","minLength","fromAtomicNumber","toAtomicNumber","atomsInfo","pathLengthMatrix","couplings","Path"],"mappings":"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"}